/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
}

description = 'Ballerina - Jaeger Extension - Native Module'

dependencies {
    implementation "org.ballerinalang:ballerina-runtime:${ballerinaLangVersion}"
    implementation "io.jaegertracing:jaeger-core:${jaegerVersion}"
    implementation "io.jaegertracing:jaeger-thrift:${jaegerVersion}"
    implementation "io.opentelemetry:opentelemetry-api:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-api-metrics:${openTelemetrySemconvVersion}"
    implementation "io.opentelemetry:opentelemetry-context:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-trace:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-common:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-semconv:${openTelemetrySemconvVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-jaeger-thrift:${openTelemetryVersion}"
    implementation "org.apache.thrift:libthrift:${libThriftVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "com.squareup.okio:okio:${okIoVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId "jaeger-extension-native"
            version = project.version
            artifact jar
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.getenv("packagePublishRepo")}")
            credentials {
                username = System.getenv("packageUser")
                password = System.getenv("packagePAT")
            }
        }
    }
}
